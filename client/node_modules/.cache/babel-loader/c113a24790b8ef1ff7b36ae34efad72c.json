{"ast":null,"code":"import _classCallCheck from \"/Users/brianford/Desktop/MakeOrMiss/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brianford/Desktop/MakeOrMiss/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brianford/Desktop/MakeOrMiss/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brianford/Desktop/MakeOrMiss/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brianford/Desktop/MakeOrMiss/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brianford/Desktop/MakeOrMiss/client/src/pages/DV1.js\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport axios from 'axios';\nimport \"../style.scss\"; // const DV1 = () => (\n//   <div id=\"dv1\">\n//     <h1>Test Page: DV1</h1>\n//     <br/>\n//     <h2>This is the test page</h2>\n//     <br/>\n//     <p>Data Visualization will go here</p>\n//   </div>\n// );\n// export default DV1;\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var url = 'https://raw.githubusercontent.com/FreeCodeCamp/ProjectReferenceData/master/global-temperature.json';\n      axios.get(url).then(function (res) {\n        var data = res.data.monthlyVariance,\n            baseTemperature = res.data.baseTemperature,\n            yearRange = d3.extent(data, function (d) {\n          return d.year;\n        });\n        var legendData = [{\n          'interval': 2.7,\n          'color': 'purple'\n        }, {\n          'interval': 3.9,\n          'color': 'darkorchid'\n        }, {\n          'interval': 6.1,\n          'color': 'mediumpurple'\n        }, {\n          'interval': 7.2,\n          'color': 'lightskyblue'\n        }, {\n          'interval': 8.3,\n          'color': 'khaki'\n        }, {\n          'interval': 9.4,\n          'color': 'orange'\n        }, {\n          'interval': 10.5,\n          'color': 'salmon'\n        }, {\n          'interval': 11.6,\n          'color': 'indianred'\n        }, {\n          'interval': 15,\n          'color': 'darkred'\n        }];\n        var width = 917,\n            height = 408,\n            margins = {\n          top: 20,\n          right: 50,\n          bottom: 100,\n          left: 100\n        };\n        var yScale = d3.scaleLinear().range([height, 0]).domain([12, 0]);\n        var xScale = d3.scaleLinear().range([0, width]).domain(d3.extent(data, function (d) {\n          return d.year;\n        })); //Setting chart width and adjusting for margins\n\n        var chart = d3.select('.chart').attr('width', width + margins.right + margins.left).attr('height', height + margins.top + margins.bottom).append('g').attr('transform', 'translate(' + margins.left + ',' + margins.top + ')');\n        var tooltip = d3.select('.container').append('div').attr('class', 'tooltip').html('Tooltip');\n        var barWidth = width / (yearRange[1] - yearRange[0]),\n            barHeight = height / 12; //Return dynamic color based on intervals in legendData\n\n        var colorScale = function colorScale(d) {\n          for (var i = 0; i < legendData.length; i++) {\n            if (d.variance + baseTemperature < legendData[i].interval) {\n              return legendData[i].color;\n            }\n          }\n\n          return 'darkred';\n        }; //Return abbreviate month string from month decimal\n\n\n        var timeParseFormat = function timeParseFormat(d) {\n          if (d === 0) return '';\n          return d3.timeFormat('%b')(d3.timeParse('%m')(d));\n        }; //Append heatmap bars, styles, and mouse events\n\n\n        chart.selectAll('g').data(data).enter().append('g').append('rect').attr('x', function (d) {\n          return (d.year - yearRange[0]) * barWidth;\n        }).attr('y', function (d) {\n          return (d.month - 1) * barHeight;\n        }).style('fill', colorScale).attr('width', barWidth).attr('height', barHeight).on('mouseover', function (d) {\n          tooltip.html(timeParseFormat(d.month) + ' ' + d.year + '<br/>' + d3.format('.4r')(baseTemperature + d.variance) + ' &degC<br/>' + d.variance + ' &degC').style('left', d3.event.pageX - 35 + 'px').style('top', d3.event.pageY - 73 + 'px').style('opacity', .9);\n        }).on('mouseout', function () {\n          tooltip.style('opacity', 0).style('left', '0px');\n        }); //Append x axis\n\n        chart.append('g').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(xScale).tickFormat(d3.format('.4'))); //Append y axis\n\n        chart.append('g').attr('transform', 'translate(0,-' + barHeight / 2 + ')').call(d3.axisLeft(yScale).tickFormat(timeParseFormat)).attr('class', 'yAxis'); //Append y axis label\n\n        chart.append('text').attr('transform', 'translate(-40,' + height / 2 + ') rotate(-90)').style('text-anchor', 'middle').text('Month'); //Append x axis label\n\n        chart.append('text').attr('transform', 'translate(' + width / 2 + ',' + (height + 40) + ')').style('text-anchor', 'middle').text('Year'); //Append color legend using legendData\n\n        chart.append('g').selectAll('g').data(legendData).enter().append('rect').attr('width', 30).attr('height', 20).attr('x', function (d, i) {\n          return i * 30 + width * .7;\n        }).attr('y', height + margins.top).style('fill', function (d) {\n          return d.color;\n        }); //Append text labels for legend from legendData\n\n        chart.append('g').selectAll('text').data(legendData).enter().append('text').attr('x', function (d, i) {\n          return i * 30 + width * .7;\n        }).attr('y', height + margins.top * 3).text(function (d) {\n          return d.interval;\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Monthly Global Land-Surface Temperature\"), React.createElement(\"svg\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component); // ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n\nexport default App;","map":{"version":3,"sources":["/Users/brianford/Desktop/MakeOrMiss/client/src/pages/DV1.js"],"names":["React","d3","axios","App","props","url","get","then","res","data","monthlyVariance","baseTemperature","yearRange","extent","d","year","legendData","width","height","margins","top","right","bottom","left","yScale","scaleLinear","range","domain","xScale","chart","select","attr","append","tooltip","html","barWidth","barHeight","colorScale","i","length","variance","interval","color","timeParseFormat","timeFormat","timeParse","selectAll","enter","month","style","on","format","event","pageX","pageY","call","axisBottom","tickFormat","axisLeft","text","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as d3 from \"d3\";\nimport axios from 'axios';\nimport \"../style.scss\"\n\n// const DV1 = () => (\n//   <div id=\"dv1\">\n//     <h1>Test Page: DV1</h1>\n//     <br/>\n//     <h2>This is the test page</h2>\n//     <br/>\n//     <p>Data Visualization will go here</p>\n//   </div>\n\n// );\n\n// export default DV1;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  \n  componentDidMount() {\n    const url = 'https://raw.githubusercontent.com/FreeCodeCamp/ProjectReferenceData/master/global-temperature.json';\n    \n    axios.get(url).then( res => {\n      \n      const data = res.data.monthlyVariance,\n            baseTemperature = res.data.baseTemperature,\n            yearRange = d3.extent(data, d => {return d.year; });\n      \n      const legendData = [\n        {'interval': 2.7, 'color': 'purple'},\n        {'interval': 3.9, 'color': 'darkorchid'},\n        {'interval': 6.1, 'color': 'mediumpurple'},\n        {'interval': 7.2, 'color': 'lightskyblue'},\n        {'interval': 8.3, 'color': 'khaki'},\n        {'interval': 9.4, 'color': 'orange'},\n        {'interval': 10.5, 'color': 'salmon'},\n        {'interval': 11.6, 'color': 'indianred'},\n        {'interval': 15,'color': 'darkred'}\n      ];\n      \n      const width = 917,\n            height = 408,\n            margins = {top:20, right: 50, bottom: 100, left: 100};\n      \n      const yScale = d3.scaleLinear()\n        .range([height,0])\n        .domain([12,0]);\n      \n      const xScale = d3.scaleLinear()\n        .range([0,width])\n        .domain(d3.extent(data, d => {return d.year; }));\n      \n      //Setting chart width and adjusting for margins\n      const chart = d3.select('.chart')\n        .attr('width', width + margins.right + margins.left)\n        .attr('height', height + margins.top + margins.bottom)\n        .append('g')\n        .attr('transform','translate(' + margins.left + ',' + margins.top + ')');\n      \n      const tooltip = d3.select('.container').append('div')\n        .attr('class','tooltip')\n        .html('Tooltip')\n      \n      const barWidth = width / (yearRange[1] - yearRange[0]),\n            barHeight = height / 12;\n      \n      //Return dynamic color based on intervals in legendData\n      const colorScale = d => {\n        for (let i = 0; i < legendData.length; i++) {\n          if (d.variance + baseTemperature < legendData[i].interval) {\n            return legendData[i].color;\n          }\n        }\n        return 'darkred';\n      };\n      \n      //Return abbreviate month string from month decimal\n      const timeParseFormat = d => {\n        if (d === 0) return '';\n        return d3.timeFormat('%b')(d3.timeParse('%m')(d));\n      };\n      \n      //Append heatmap bars, styles, and mouse events\n      chart.selectAll('g')\n        .data(data).enter().append('g')\n        .append('rect')\n        .attr('x', d => {return (d.year - yearRange[0]) * barWidth})\n        .attr('y', d => {return (d.month - 1) * barHeight})\n        .style('fill', colorScale)\n        .attr('width', barWidth)\n        .attr('height', barHeight)\n        .on('mouseover', d => {\n          tooltip.html(timeParseFormat(d.month) + ' ' + d.year + '<br/>' +\n            d3.format('.4r')(baseTemperature + d.variance) + ' &degC<br/>' + d.variance + ' &degC' )\n            .style('left', d3.event.pageX - 35 + 'px')\n            .style('top', d3.event.pageY - 73 + 'px')\n            .style('opacity', .9);\n        }).on('mouseout', () => {\n          tooltip.style('opacity', 0)\n            .style('left', '0px');\n        });\n      \n      //Append x axis\n      chart.append('g')\n        .attr('transform','translate(0,' + height + ')')\n        .call(d3.axisBottom(xScale).tickFormat(d3.format('.4')));\n      \n      //Append y axis\n      chart.append('g')\n        .attr('transform','translate(0,-' + barHeight / 2 + ')')\n        .call(d3.axisLeft(yScale).tickFormat(timeParseFormat))\n        .attr('class','yAxis');\n      \n      //Append y axis label\n      chart.append('text')\n        .attr('transform','translate(-40,' + (height / 2)  + ') rotate(-90)')\n        .style('text-anchor','middle')\n        .text('Month');\n      \n      //Append x axis label\n      chart.append('text')\n        .attr('transform','translate(' + (width / 2) + ',' + (height + 40) + ')')\n        .style('text-anchor','middle')\n        .text('Year');\n      \n      //Append color legend using legendData\n      chart.append('g')\n        .selectAll('g')\n        .data(legendData).enter()\n        .append('rect')\n        .attr('width', 30)\n        .attr('height', 20)\n        .attr('x', (d, i) => { return i * 30 + width * .7;})\n        .attr('y', height + margins.top)\n        .style('fill', d => {return d.color; });\n      \n      //Append text labels for legend from legendData\n      chart.append('g')\n        .selectAll('text')\n        .data(legendData).enter().append('text')\n        .attr('x', (d,i) => {return i * 30 + width * .7})\n        .attr('y', height + margins.top * 3)\n        .text(d => {return d.interval; });\n        \n    });\n  }\n  \n  render() {\n    return(\n      <div className='container'>\n        <h1>Monthly Global Land-Surface Temperature</h1>\n        <svg className='chart'></svg>\n      </div>\n    );\n  }\n}\n\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\nexport default App"]},"metadata":{},"sourceType":"module"}