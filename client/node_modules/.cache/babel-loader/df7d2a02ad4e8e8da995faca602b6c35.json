{"ast":null,"code":"import _classCallCheck from \"/Users/brianford/Desktop/MakeOrMiss/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brianford/Desktop/MakeOrMiss/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brianford/Desktop/MakeOrMiss/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brianford/Desktop/MakeOrMiss/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brianford/Desktop/MakeOrMiss/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brianford/Desktop/MakeOrMiss/client/src/pages/Team.js\";\nimport React from \"react\";\nimport * as d3 from 'd3';\nimport Clutch from '../assets/Clutch.csv';\n\nvar About =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(About, _React$Component);\n\n  function About() {\n    _classCallCheck(this, About);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(About).apply(this, arguments));\n  }\n\n  _createClass(About, [{\n    key: \"CB\",\n    value: function CB() {\n      // set the dimensions and margins of the graph\n      var width = 2000;\n      var height = 2000; // append the svg object to the body of the page\n\n      var svg = d3.select(\"#CB\").append(\"svg\").attr(\"width\", width).attr(\"height\", height); // Read data\n\n      d3.csv(Clutch).then(function (data) {\n        // Filter a bit the data -> more than 1 million inhabitants\n        var data = data.filter(function (d) {\n          return d.value > 1;\n        }); // Color palette for continents?\n\n        var color = d3.scaleOrdinal().domain([\"MIL\", \"TOR\", \"PHI\", \"BOS\", \"IND\", \"BRK\", \"ORL\", \"DET\", \"CHO\", \"MIA\", \"WAS\", \"ATL\", \"CHI\", \"CLE\", \"NYK\"]).range([\"#00471B\", \"#CE1141\", \"#006BB6\", \"#007A33\", \"#FDBB30\", \"#000000\", \"#0077C0\", \"#C8102E\", \"#1D1160\", \"#98002E\", \"#E31837\", \"#FFCD00\", \"#BC032B\", \"#6F263D\", \"#F58426\"]); // Size scale for players\n\n        var size = d3.scaleLinear().domain([0, 60]).range([5, 100]); // circle will be between 7 and 55 px wide\n        // create a tooltip\n\n        var Tooltip = d3.select(\"#CB\").append(\"div\").style(\"opacity\", 0).attr(\"class\", \"tooltip\").style(\"background-color\", \"white\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"5px\"); // Three function that change the tooltip when user hover / move / leave a cell\n\n        var mouseover = function mouseover(d) {\n          Tooltip.style(\"opacity\", 1);\n        };\n\n        var mousemove = function mousemove(d) {\n          Tooltip.html('<u>' + d.key + '</u>' + \"<br>\" + d.value + \" FG %\").style(\"left\", d3.mouse(this)[0] + 20 + \"px\").style(\"top\", d3.mouse(this)[1] + 20 + \"px\");\n        };\n\n        var mouseleave = function mouseleave(d) {\n          Tooltip.style(\"opacity\", 0);\n        }; // Initialize the circle: all located at the center of the svg area\n\n\n        var node = svg.append(\"g\").selectAll(\"circle\").data(data).enter().append(\"circle\").attr(\"class\", \"node\").attr(\"r\", function (d) {\n          return size(d.value);\n        }).attr(\"cx\", width / 2).attr(\"cy\", height / 2).style(\"fill\", function (d) {\n          return color(d.team);\n        }).style(\"fill-opacity\", 0.8).attr(\"stroke\", \"black\").style(\"stroke-width\", 1).on(\"mouseover\", mouseover) // What to do when hovered\n        .on(\"mousemove\", mousemove).on(\"mouseleave\", mouseleave).call(d3.drag() // call specific function when circle is dragged\n        .on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended)); // Features of the forces applied to the nodes:\n\n        var simulation = d3.forceSimulation().force(\"center\", d3.forceCenter().x(width / 2).y(height / 2)) // Attraction to the center of the svg area\n        .force(\"charge\", d3.forceManyBody().strength(.1)) // Nodes are attracted one each other of value is > 0\n        .force(\"collide\", d3.forceCollide().strength(.2).radius(function (d) {\n          return size(d.value) + 3;\n        }).iterations(1)); // Force that avoids circle overlapping\n        // Apply these forces to the nodes and update their positions.\n        // Once the force algorithm is happy with positions ('alpha' value is low enough), simulations will stop.\n\n        simulation.nodes(data).on(\"tick\", function (d) {\n          node.attr(\"cx\", function (d) {\n            return d.x;\n          }).attr(\"cy\", function (d) {\n            return d.y;\n          });\n        }); // What happens when a circle is dragged?\n\n        function dragstarted(d) {\n          if (!d3.event.active) simulation.alphaTarget(.03).restart();\n          d.fx = d.x;\n          d.fy = d.y;\n        }\n\n        function dragged(d) {\n          d.fx = d3.event.x;\n          d.fy = d3.event.y;\n        }\n\n        function dragended(d) {\n          if (!d3.event.active) simulation.alphaTarget(.03);\n          d.fx = null;\n          d.fy = null;\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.CB();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"CB\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return About;\n}(React.Component);\n\nexport default Team;","map":{"version":3,"sources":["/Users/brianford/Desktop/MakeOrMiss/client/src/pages/Team.js"],"names":["React","d3","Clutch","About","width","height","svg","select","append","attr","csv","then","data","filter","d","value","color","scaleOrdinal","domain","range","size","scaleLinear","Tooltip","style","mouseover","mousemove","html","key","mouse","mouseleave","node","selectAll","enter","team","on","call","drag","dragstarted","dragged","dragended","simulation","forceSimulation","force","forceCenter","x","y","forceManyBody","strength","forceCollide","radius","iterations","nodes","event","active","alphaTarget","restart","fx","fy","CB","Component","Team"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as d3 from 'd3';\nimport Clutch from '../assets/Clutch.csv'\n\nclass About extends React.Component {\n\n    CB(){\n      // set the dimensions and margins of the graph\n    var width = 2000\n    var height = 2000\n    \n    // append the svg object to the body of the page\n    var svg = d3.select(\"#CB\")\n      .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n    \n    // Read data\n  \n    d3.csv(Clutch).then (function(data) {\n    \n      // Filter a bit the data -> more than 1 million inhabitants\n     var data = data.filter(function(d){ return d.value>1 })\n    \n      // Color palette for continents?\n      var color = d3.scaleOrdinal()\n      .domain([\"MIL\", \"TOR\", \"PHI\", \"BOS\", \"IND\", \"BRK\", \"ORL\", \"DET\", \"CHO\", \"MIA\", \"WAS\", \"ATL\", \"CHI\", \"CLE\", \"NYK\"])\n        .range([ \"#00471B\", \"#CE1141\",\"#006BB6\", \"#007A33\", \"#FDBB30\",\"#000000\",\"#0077C0\",\"#C8102E\",\"#1D1160\",\"#98002E\",\"#E31837\",\"#FFCD00\",\"#BC032B\",\"#6F263D\", \"#F58426\"])    \n      // Size scale for players\n      var size = d3.scaleLinear()\n        .domain([0, 60])\n        .range([5,100])  // circle will be between 7 and 55 px wide\n    \n      // create a tooltip\n      var Tooltip = d3.select(\"#CB\")\n        .append(\"div\")\n        .style(\"opacity\", 0)\n        .attr(\"class\", \"tooltip\")\n        .style(\"background-color\", \"white\")\n        .style(\"border\", \"solid\")\n        .style(\"border-width\", \"2px\")\n        .style(\"border-radius\", \"5px\")\n        .style(\"padding\", \"5px\")\n    \n      // Three function that change the tooltip when user hover / move / leave a cell\n      var mouseover = function(d) {\n        Tooltip\n          .style(\"opacity\", 1)\n      }\n      var mousemove = function(d) {\n        Tooltip\n          .html('<u>' + d.key + '</u>' + \"<br>\" + d.value + \" FG %\")\n          .style(\"left\", (d3.mouse(this)[0]+20) + \"px\")\n          .style(\"top\", (d3.mouse(this)[1]+20) + \"px\")\n      }\n      var mouseleave = function(d) {\n        Tooltip\n          .style(\"opacity\", 0)\n      }\n    \n      // Initialize the circle: all located at the center of the svg area\n      var node = svg.append(\"g\")\n        .selectAll(\"circle\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n          .attr(\"class\", \"node\")\n          .attr(\"r\", function(d){ return size(d.value)})\n          .attr(\"cx\", width / 2)\n          .attr(\"cy\", height / 2)\n          .style(\"fill\", function(d){ return color(d.team)})\n          .style(\"fill-opacity\", 0.8)\n          .attr(\"stroke\", \"black\")\n          .style(\"stroke-width\", 1)\n          .on(\"mouseover\", mouseover) // What to do when hovered\n          .on(\"mousemove\", mousemove)\n          .on(\"mouseleave\", mouseleave)\n          .call(d3.drag() // call specific function when circle is dragged\n               .on(\"start\", dragstarted)\n               .on(\"drag\", dragged)\n               .on(\"end\", dragended));\n    \n      // Features of the forces applied to the nodes:\n      var simulation = d3.forceSimulation()\n          .force(\"center\", d3.forceCenter().x(width / 2).y(height / 2)) // Attraction to the center of the svg area\n          .force(\"charge\", d3.forceManyBody().strength(.1)) // Nodes are attracted one each other of value is > 0\n          .force(\"collide\", d3.forceCollide().strength(.2).radius(function(d){ return (size(d.value)+3) }).iterations(1)) // Force that avoids circle overlapping\n    \n      // Apply these forces to the nodes and update their positions.\n      // Once the force algorithm is happy with positions ('alpha' value is low enough), simulations will stop.\n      simulation\n          .nodes(data)\n          .on(\"tick\", function(d){\n            node\n                .attr(\"cx\", function(d){ return d.x; })\n                .attr(\"cy\", function(d){ return d.y; })\n          });\n    \n      // What happens when a circle is dragged?\n      function dragstarted(d) {\n        if (!d3.event.active) simulation.alphaTarget(.03).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }\n      function dragged(d) {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n      }\n      function dragended(d) {\n        if (!d3.event.active) simulation.alphaTarget(.03);\n        d.fx = null;\n        d.fy = null;\n      }\n    \n    })\n  }\n      componentDidMount () {\n        this.CB()\n      }\n\n    render (){\n    return (\n      <div id=\"CB\"></div>\n    )\n    }\n    \n}\n\nexport default Team;\n"]},"metadata":{},"sourceType":"module"}